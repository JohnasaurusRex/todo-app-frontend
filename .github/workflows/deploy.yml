# .github/workflows/deploy.yml  
# GitHub Actions workflow for Vue.js Frontend Auto-Deployment

name: Deploy Frontend to EC2

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        timeout: 300s
        script: |
          set -e
          
          echo "üöÄ Starting frontend deployment..."
          
          # Navigate to frontend directory
          cd /var/www/todo-frontend
          
          # Pull latest changes
          echo "üì• Pulling latest changes..."
          git fetch origin
          git reset --hard origin/main
          
          # Install/update dependencies (including dev dependencies for building)
          echo "üìö Installing npm dependencies..."
          npm ci
          
          # Create production environment file
          echo "‚öôÔ∏è Setting up environment..."
          echo "VUE_APP_API_URL=https://${{ secrets.EC2_HOST }}/api" > .env
          
          # Build for production
          echo "üèóÔ∏è Building for production..."
          NODE_ENV=production npm run build
          
          # Check if build was successful
          if [ ! -d "dist" ]; then
            echo "‚ùå Build failed - dist directory not found"
            exit 1
          fi
          
          echo "‚úÖ Build completed successfully"
          
          # Backup current frontend (just in case)
          echo "üì¶ Creating backup..."
          sudo cp -r /var/www/html/todo-app /var/www/html/todo-app.backup.$(date +%Y%m%d_%H%M%S) || true
          
          # Deploy built files
          echo "üöö Deploying built files..."
          sudo rm -rf /var/www/html/todo-app/*
          sudo cp -r dist/* /var/www/html/todo-app/
          
          # Fix permissions
          echo "üîí Fixing permissions..."
          sudo chown -R www-data:www-data /var/www/html/todo-app
          sudo chmod -R 755 /var/www/html/todo-app
          
          # Reload nginx to clear any cached content
          echo "üîÑ Reloading nginx..."
          sudo systemctl reload nginx
          
          # Test frontend
          echo "üß™ Testing frontend..."
          if curl -f -s -I http://127.0.0.1 | grep -q "200 OK"; then
            echo "‚úÖ Frontend is responding"
          else
            echo "‚ùå Frontend is not responding properly"
            # Don't fail the deployment for this, as it might be a timing issue
          fi
          
          # Test API connectivity from frontend perspective
          echo "üîó Testing API connectivity..."
          API_URL="https://${{ secrets.EC2_HOST }}/api/health"
          if curl -f -s "$API_URL" > /dev/null; then
            echo "‚úÖ API is accessible from public URL"
          else
            echo "‚ö†Ô∏è API might not be accessible from public URL"
          fi
          
          echo "üéâ Frontend deployment completed successfully!"
          
          # Show deployment info
          echo "üìä Deployment Summary:"
          echo "- Repository: todo-app-frontend"
          echo "- Branch: main"
          echo "- Commit: $(git rev-parse --short HEAD)"
          echo "- Time: $(date)"
          echo "- Node Version: $(node --version)"
          echo "- NPM Version: $(npm --version)"

    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "‚úÖ Frontend deployment successful!"
        else
          echo "‚ùå Frontend deployment failed!"
        fi
